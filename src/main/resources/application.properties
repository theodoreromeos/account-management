####  APPLICATION NAME  ####
spring.application.name=${AS_NAME:account-management}
server.servlet.context-path=/account-management
####  SERVER PORT ####
server.port=${AS_SERVER_PORT:8085}
####  SECURITY LOGS  ####
logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL:TRACE}
####  DATABASE INFO AND CREDENTIALS  ####
spring.datasource.url=jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:4567}/${DATABASE_NAME:account-management-db}
spring.datasource.username=${DATABASE_USERNAME:theodore}
spring.datasource.password=${DATABASE_PASSWORD:theo7272}
####  SQL LOGS  ####
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${HIBERNATE_FORMAT_SQL:false}
####  LOGGGING   ####
logging.pattern.console=${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}
logging.level.org.springframework.boot.autoconfigure.security=DEBUG
logging.level.org.springframework.boot.context.properties=TRACE
####  LIQUIBASE  ####
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml
####  CACHE ####
spring.cache.type=simple
####  TOKEN  ####
app.email-token-lifetime-seconds=86400

# ------------------------------
# 1) Client-credentials (for RestClient)
# ------------------------------
spring.security.oauth2.client.registration.mobility-api.provider=auth-server
spring.security.oauth2.client.registration.mobility-api.client-id=mobility-api
spring.security.oauth2.client.registration.mobility-api.client-secret=thes333crEt
spring.security.oauth2.client.registration.mobility-api.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.mobility-api.client-authentication-method=client_secret_basic
spring.security.oauth2.client.registration.mobility-api.scope=INTERNAL_SERVICE
spring.security.oauth2.client.provider.auth-server.token-uri=http://localhost:9000/auth-server/oauth2/token
# ------------------------------
# 2) JWT validation (for incoming user tokens)
# ------------------------------
# Point this at your Auth Server?s issuer. Spring Boot will fetch
# /.well-known/openid-configuration ? jwk-set-uri for you.
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000/auth-server


springdoc.swagger-ui.path=/swagger
springdoc.swagger-ui.try-it-out-enabled=true
